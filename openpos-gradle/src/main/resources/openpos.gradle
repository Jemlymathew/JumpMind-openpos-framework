apply plugin: 'groovy'

tasks.withType(GroovyCompile) {
    options.compilerArgs = ['-Xlint:none']
}


sourceSets {
    // In order to reference groovy from Java, the source sets need to be considered together during compilation (in
    // the groovy plugin, which extends the java plugin and handles java sources).
    main {
        java { srcDirs = []}
        groovy { srcDirs += ['src/main/java']}
    }
}

dependencies {
    compile group: 'org.codehaus.groovy', name: 'groovy', version: '2.5.5'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile "org.springframework:spring-context:$springVersion"
    compile group: 'org.springframework.data', name: 'spring-data-commons', version: "${springDataCommon}"
    compile group: 'org.joda', name: 'joda-money', version: '1.0.1'

    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.25'


    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.5.13'
    testCompile('org.junit.jupiter:junit-jupiter:5.6.2')
    testCompile('org.junit.vintage:junit-vintage-engine:5.6.2')
    testCompile('com.vmlens:concurrent-junit:1.0.2') {
        exclude group:'junit'
    }
    testCompile ("org.springframework:spring-test:$springVersion") {
        exclude group:"org.junit.jupiter"
    }
}
